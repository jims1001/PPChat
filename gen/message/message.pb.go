// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.3
// source: message/message.proto

package messagepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ========================= MessageData（= MsgStruct） =========================
type MessageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// —— 标识/时间/路由 —— //
	ClientMsgId      string `protobuf:"bytes,1,opt,name=client_msg_id,json=clientMsgId,proto3" json:"client_msg_id,omitempty"`
	ServerMsgId      string `protobuf:"bytes,2,opt,name=server_msg_id,json=serverMsgId,proto3" json:"server_msg_id,omitempty"`
	CreateTime       int64  `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	SendTime         int64  `protobuf:"varint,4,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	SessionType      int32  `protobuf:"varint,5,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
	SendId           string `protobuf:"bytes,6,opt,name=send_id,json=sendId,proto3" json:"send_id,omitempty"`
	RecvId           string `protobuf:"bytes,7,opt,name=recv_id,json=recvId,proto3" json:"recv_id,omitempty"`
	MsgFrom          int32  `protobuf:"varint,8,opt,name=msg_from,json=msgFrom,proto3" json:"msg_from,omitempty"`
	ContentType      int32  `protobuf:"varint,9,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	SenderPlatformId int32  `protobuf:"varint,10,opt,name=sender_platform_id,json=senderPlatformId,proto3" json:"sender_platform_id,omitempty"`
	SenderNickname   string `protobuf:"bytes,11,opt,name=sender_nickname,json=senderNickname,proto3" json:"sender_nickname,omitempty"`
	SenderFaceUrl    string `protobuf:"bytes,12,opt,name=sender_face_url,json=senderFaceUrl,proto3" json:"sender_face_url,omitempty"`
	GroupId          string `protobuf:"bytes,13,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Content          string `protobuf:"bytes,14,opt,name=content,proto3" json:"content,omitempty"`
	Seq              int64  `protobuf:"varint,15,opt,name=seq,proto3" json:"seq,omitempty"`
	IsRead           bool   `protobuf:"varint,16,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	Status           int32  `protobuf:"varint,17,opt,name=status,proto3" json:"status,omitempty"`
	// —— 推送/扩展 —— //
	OfflinePush  *OfflinePushInfo `protobuf:"bytes,18,opt,name=offline_push,json=offlinePush,proto3" json:"offline_push,omitempty"`
	AttachedInfo string           `protobuf:"bytes,19,opt,name=attached_info,json=attachedInfo,proto3" json:"attached_info,omitempty"`
	Ex           string           `protobuf:"bytes,20,opt,name=ex,proto3" json:"ex,omitempty"`
	LocalEx      string           `protobuf:"bytes,21,opt,name=local_ex,json=localEx,proto3" json:"local_ex,omitempty"`
	// —— 消息元素（多态内容） —— //
	TextElem         *TextElem         `protobuf:"bytes,30,opt,name=text_elem,json=textElem,proto3" json:"text_elem,omitempty"`
	CardElem         *CardElem         `protobuf:"bytes,31,opt,name=card_elem,json=cardElem,proto3" json:"card_elem,omitempty"`
	PictureElem      *PictureElem      `protobuf:"bytes,32,opt,name=picture_elem,json=pictureElem,proto3" json:"picture_elem,omitempty"`
	SoundElem        *SoundElem        `protobuf:"bytes,33,opt,name=sound_elem,json=soundElem,proto3" json:"sound_elem,omitempty"`
	VideoElem        *VideoElem        `protobuf:"bytes,34,opt,name=video_elem,json=videoElem,proto3" json:"video_elem,omitempty"`
	FileElem         *FileElem         `protobuf:"bytes,35,opt,name=file_elem,json=fileElem,proto3" json:"file_elem,omitempty"`
	MergeElem        *MergeElem        `protobuf:"bytes,36,opt,name=merge_elem,json=mergeElem,proto3" json:"merge_elem,omitempty"`
	AtTextElem       *AtTextElem       `protobuf:"bytes,37,opt,name=at_text_elem,json=atTextElem,proto3" json:"at_text_elem,omitempty"`
	FaceElem         *FaceElem         `protobuf:"bytes,38,opt,name=face_elem,json=faceElem,proto3" json:"face_elem,omitempty"`
	LocationElem     *LocationElem     `protobuf:"bytes,39,opt,name=location_elem,json=locationElem,proto3" json:"location_elem,omitempty"`
	CustomElem       *CustomElem       `protobuf:"bytes,40,opt,name=custom_elem,json=customElem,proto3" json:"custom_elem,omitempty"`
	QuoteElem        *QuoteElem        `protobuf:"bytes,41,opt,name=quote_elem,json=quoteElem,proto3" json:"quote_elem,omitempty"`
	NotificationElem *NotificationElem `protobuf:"bytes,42,opt,name=notification_elem,json=notificationElem,proto3" json:"notification_elem,omitempty"`
	AdvancedTextElem *AdvancedTextElem `protobuf:"bytes,43,opt,name=advanced_text_elem,json=advancedTextElem,proto3" json:"advanced_text_elem,omitempty"`
	TypingElem       *TypingElem       `protobuf:"bytes,44,opt,name=typing_elem,json=typingElem,proto3" json:"typing_elem,omitempty"`
	AttachedInfoElem *AttachedInfoElem `protobuf:"bytes,45,opt,name=attached_info_elem,json=attachedInfoElem,proto3" json:"attached_info_elem,omitempty"`
	MarkdownTextElem *MarkdownTextElem `protobuf:"bytes,46,opt,name=markdown_text_elem,json=markdownTextElem,proto3" json:"markdown_text_elem,omitempty"`
	// —— 协作/审计/公域扩展 —— //
	IsEdited    bool     `protobuf:"varint,60,opt,name=is_edited,json=isEdited,proto3" json:"is_edited,omitempty"`
	EditedAt    int64    `protobuf:"varint,61,opt,name=edited_at,json=editedAt,proto3" json:"edited_at,omitempty"`
	EditVersion int32    `protobuf:"varint,62,opt,name=edit_version,json=editVersion,proto3" json:"edit_version,omitempty"`
	ExpireAt    int64    `protobuf:"varint,63,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	AccessLevel string   `protobuf:"bytes,64,opt,name=access_level,json=accessLevel,proto3" json:"access_level,omitempty"` // private/group/public
	TraceId     string   `protobuf:"bytes,65,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId   string   `protobuf:"bytes,66,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Tags        []string `protobuf:"bytes,67,rep,name=tags,proto3" json:"tags,omitempty"`
	// —— Guild/Channel/Thread/引用 & 富媒体 —— //
	GuildId     string           `protobuf:"bytes,100,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	ChannelId   string           `protobuf:"bytes,101,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ThreadId    string           `protobuf:"bytes,102,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	ReplyTo     string           `protobuf:"bytes,103,opt,name=reply_to,json=replyTo,proto3" json:"reply_to,omitempty"`
	IsEphemeral bool             `protobuf:"varint,104,opt,name=is_ephemeral,json=isEphemeral,proto3" json:"is_ephemeral,omitempty"`
	Rich        *RichMessage     `protobuf:"bytes,105,opt,name=rich,proto3" json:"rich,omitempty"`
	Automod     []*AutoModSignal `protobuf:"bytes,110,rep,name=automod,proto3" json:"automod,omitempty"`
}

func (x *MessageData) Reset() {
	*x = MessageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageData) ProtoMessage() {}

func (x *MessageData) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageData.ProtoReflect.Descriptor instead.
func (*MessageData) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{0}
}

func (x *MessageData) GetClientMsgId() string {
	if x != nil {
		return x.ClientMsgId
	}
	return ""
}

func (x *MessageData) GetServerMsgId() string {
	if x != nil {
		return x.ServerMsgId
	}
	return ""
}

func (x *MessageData) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *MessageData) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *MessageData) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *MessageData) GetSendId() string {
	if x != nil {
		return x.SendId
	}
	return ""
}

func (x *MessageData) GetRecvId() string {
	if x != nil {
		return x.RecvId
	}
	return ""
}

func (x *MessageData) GetMsgFrom() int32 {
	if x != nil {
		return x.MsgFrom
	}
	return 0
}

func (x *MessageData) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *MessageData) GetSenderPlatformId() int32 {
	if x != nil {
		return x.SenderPlatformId
	}
	return 0
}

func (x *MessageData) GetSenderNickname() string {
	if x != nil {
		return x.SenderNickname
	}
	return ""
}

func (x *MessageData) GetSenderFaceUrl() string {
	if x != nil {
		return x.SenderFaceUrl
	}
	return ""
}

func (x *MessageData) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *MessageData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MessageData) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *MessageData) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *MessageData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MessageData) GetOfflinePush() *OfflinePushInfo {
	if x != nil {
		return x.OfflinePush
	}
	return nil
}

func (x *MessageData) GetAttachedInfo() string {
	if x != nil {
		return x.AttachedInfo
	}
	return ""
}

func (x *MessageData) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *MessageData) GetLocalEx() string {
	if x != nil {
		return x.LocalEx
	}
	return ""
}

func (x *MessageData) GetTextElem() *TextElem {
	if x != nil {
		return x.TextElem
	}
	return nil
}

func (x *MessageData) GetCardElem() *CardElem {
	if x != nil {
		return x.CardElem
	}
	return nil
}

func (x *MessageData) GetPictureElem() *PictureElem {
	if x != nil {
		return x.PictureElem
	}
	return nil
}

func (x *MessageData) GetSoundElem() *SoundElem {
	if x != nil {
		return x.SoundElem
	}
	return nil
}

func (x *MessageData) GetVideoElem() *VideoElem {
	if x != nil {
		return x.VideoElem
	}
	return nil
}

func (x *MessageData) GetFileElem() *FileElem {
	if x != nil {
		return x.FileElem
	}
	return nil
}

func (x *MessageData) GetMergeElem() *MergeElem {
	if x != nil {
		return x.MergeElem
	}
	return nil
}

func (x *MessageData) GetAtTextElem() *AtTextElem {
	if x != nil {
		return x.AtTextElem
	}
	return nil
}

func (x *MessageData) GetFaceElem() *FaceElem {
	if x != nil {
		return x.FaceElem
	}
	return nil
}

func (x *MessageData) GetLocationElem() *LocationElem {
	if x != nil {
		return x.LocationElem
	}
	return nil
}

func (x *MessageData) GetCustomElem() *CustomElem {
	if x != nil {
		return x.CustomElem
	}
	return nil
}

func (x *MessageData) GetQuoteElem() *QuoteElem {
	if x != nil {
		return x.QuoteElem
	}
	return nil
}

func (x *MessageData) GetNotificationElem() *NotificationElem {
	if x != nil {
		return x.NotificationElem
	}
	return nil
}

func (x *MessageData) GetAdvancedTextElem() *AdvancedTextElem {
	if x != nil {
		return x.AdvancedTextElem
	}
	return nil
}

func (x *MessageData) GetTypingElem() *TypingElem {
	if x != nil {
		return x.TypingElem
	}
	return nil
}

func (x *MessageData) GetAttachedInfoElem() *AttachedInfoElem {
	if x != nil {
		return x.AttachedInfoElem
	}
	return nil
}

func (x *MessageData) GetMarkdownTextElem() *MarkdownTextElem {
	if x != nil {
		return x.MarkdownTextElem
	}
	return nil
}

func (x *MessageData) GetIsEdited() bool {
	if x != nil {
		return x.IsEdited
	}
	return false
}

func (x *MessageData) GetEditedAt() int64 {
	if x != nil {
		return x.EditedAt
	}
	return 0
}

func (x *MessageData) GetEditVersion() int32 {
	if x != nil {
		return x.EditVersion
	}
	return 0
}

func (x *MessageData) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *MessageData) GetAccessLevel() string {
	if x != nil {
		return x.AccessLevel
	}
	return ""
}

func (x *MessageData) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *MessageData) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *MessageData) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *MessageData) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

func (x *MessageData) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MessageData) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *MessageData) GetReplyTo() string {
	if x != nil {
		return x.ReplyTo
	}
	return ""
}

func (x *MessageData) GetIsEphemeral() bool {
	if x != nil {
		return x.IsEphemeral
	}
	return false
}

func (x *MessageData) GetRich() *RichMessage {
	if x != nil {
		return x.Rich
	}
	return nil
}

func (x *MessageData) GetAutomod() []*AutoModSignal {
	if x != nil {
		return x.Automod
	}
	return nil
}

// ================== 推送/业务辅助 ==================
type OfflinePushInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title                     string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Desc                      string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Ex                        string `protobuf:"bytes,3,opt,name=ex,proto3" json:"ex,omitempty"`
	IosBadgeCountPlus1        bool   `protobuf:"varint,4,opt,name=ios_badge_count_plus1,json=iosBadgeCountPlus1,proto3" json:"ios_badge_count_plus1,omitempty"`
	IosCategory               string `protobuf:"bytes,5,opt,name=ios_category,json=iosCategory,proto3" json:"ios_category,omitempty"`
	IosSound                  string `protobuf:"bytes,6,opt,name=ios_sound,json=iosSound,proto3" json:"ios_sound,omitempty"`
	AndroidVivoClassification bool   `protobuf:"varint,7,opt,name=android_vivo_classification,json=androidVivoClassification,proto3" json:"android_vivo_classification,omitempty"`
}

func (x *OfflinePushInfo) Reset() {
	*x = OfflinePushInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflinePushInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflinePushInfo) ProtoMessage() {}

func (x *OfflinePushInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflinePushInfo.ProtoReflect.Descriptor instead.
func (*OfflinePushInfo) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{1}
}

func (x *OfflinePushInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OfflinePushInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *OfflinePushInfo) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *OfflinePushInfo) GetIosBadgeCountPlus1() bool {
	if x != nil {
		return x.IosBadgeCountPlus1
	}
	return false
}

func (x *OfflinePushInfo) GetIosCategory() string {
	if x != nil {
		return x.IosCategory
	}
	return ""
}

func (x *OfflinePushInfo) GetIosSound() string {
	if x != nil {
		return x.IosSound
	}
	return ""
}

func (x *OfflinePushInfo) GetAndroidVivoClassification() bool {
	if x != nil {
		return x.AndroidVivoClassification
	}
	return false
}

type MessageReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string   `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId      string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MsgIdList   []string `protobuf:"bytes,3,rep,name=msg_id_list,json=msgIdList,proto3" json:"msg_id_list,omitempty"`
	ReadTime    int64    `protobuf:"varint,4,opt,name=read_time,json=readTime,proto3" json:"read_time,omitempty"`
	MsgFrom     int32    `protobuf:"varint,5,opt,name=msg_from,json=msgFrom,proto3" json:"msg_from,omitempty"`
	ContentType int32    `protobuf:"varint,6,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	SessionType int32    `protobuf:"varint,7,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
}

func (x *MessageReceipt) Reset() {
	*x = MessageReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReceipt) ProtoMessage() {}

func (x *MessageReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReceipt.ProtoReflect.Descriptor instead.
func (*MessageReceipt) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{2}
}

func (x *MessageReceipt) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *MessageReceipt) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MessageReceipt) GetMsgIdList() []string {
	if x != nil {
		return x.MsgIdList
	}
	return nil
}

func (x *MessageReceipt) GetReadTime() int64 {
	if x != nil {
		return x.ReadTime
	}
	return 0
}

func (x *MessageReceipt) GetMsgFrom() int32 {
	if x != nil {
		return x.MsgFrom
	}
	return 0
}

func (x *MessageReceipt) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *MessageReceipt) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

type MessageRevoked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RevokerId                   string `protobuf:"bytes,1,opt,name=revoker_id,json=revokerId,proto3" json:"revoker_id,omitempty"`
	RevokerRole                 int32  `protobuf:"varint,2,opt,name=revoker_role,json=revokerRole,proto3" json:"revoker_role,omitempty"`
	ClientMsgId                 string `protobuf:"bytes,3,opt,name=client_msg_id,json=clientMsgId,proto3" json:"client_msg_id,omitempty"`
	RevokerNickname             string `protobuf:"bytes,4,opt,name=revoker_nickname,json=revokerNickname,proto3" json:"revoker_nickname,omitempty"`
	RevokeTime                  int64  `protobuf:"varint,5,opt,name=revoke_time,json=revokeTime,proto3" json:"revoke_time,omitempty"`
	SourceMessageSendTime       int64  `protobuf:"varint,6,opt,name=source_message_send_time,json=sourceMessageSendTime,proto3" json:"source_message_send_time,omitempty"`
	SourceMessageSendId         string `protobuf:"bytes,7,opt,name=source_message_send_id,json=sourceMessageSendId,proto3" json:"source_message_send_id,omitempty"`
	SourceMessageSenderNickname string `protobuf:"bytes,8,opt,name=source_message_sender_nickname,json=sourceMessageSenderNickname,proto3" json:"source_message_sender_nickname,omitempty"`
	SessionType                 int32  `protobuf:"varint,9,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
	Seq                         int64  `protobuf:"varint,10,opt,name=seq,proto3" json:"seq,omitempty"`
	Ex                          string `protobuf:"bytes,11,opt,name=ex,proto3" json:"ex,omitempty"`
	IsAdminRevoke               bool   `protobuf:"varint,12,opt,name=is_admin_revoke,json=isAdminRevoke,proto3" json:"is_admin_revoke,omitempty"`
}

func (x *MessageRevoked) Reset() {
	*x = MessageRevoked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageRevoked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRevoked) ProtoMessage() {}

func (x *MessageRevoked) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRevoked.ProtoReflect.Descriptor instead.
func (*MessageRevoked) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{3}
}

func (x *MessageRevoked) GetRevokerId() string {
	if x != nil {
		return x.RevokerId
	}
	return ""
}

func (x *MessageRevoked) GetRevokerRole() int32 {
	if x != nil {
		return x.RevokerRole
	}
	return 0
}

func (x *MessageRevoked) GetClientMsgId() string {
	if x != nil {
		return x.ClientMsgId
	}
	return ""
}

func (x *MessageRevoked) GetRevokerNickname() string {
	if x != nil {
		return x.RevokerNickname
	}
	return ""
}

func (x *MessageRevoked) GetRevokeTime() int64 {
	if x != nil {
		return x.RevokeTime
	}
	return 0
}

func (x *MessageRevoked) GetSourceMessageSendTime() int64 {
	if x != nil {
		return x.SourceMessageSendTime
	}
	return 0
}

func (x *MessageRevoked) GetSourceMessageSendId() string {
	if x != nil {
		return x.SourceMessageSendId
	}
	return ""
}

func (x *MessageRevoked) GetSourceMessageSenderNickname() string {
	if x != nil {
		return x.SourceMessageSenderNickname
	}
	return ""
}

func (x *MessageRevoked) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *MessageRevoked) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *MessageRevoked) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *MessageRevoked) GetIsAdminRevoke() bool {
	if x != nil {
		return x.IsAdminRevoke
	}
	return false
}

type MessageReaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientMsgId  string `protobuf:"bytes,1,opt,name=client_msg_id,json=clientMsgId,proto3" json:"client_msg_id,omitempty"`
	ReactionType int32  `protobuf:"varint,2,opt,name=reaction_type,json=reactionType,proto3" json:"reaction_type,omitempty"`
	Counter      int32  `protobuf:"varint,3,opt,name=counter,proto3" json:"counter,omitempty"`
	UserId       string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GroupId      string `protobuf:"bytes,5,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	SessionType  int32  `protobuf:"varint,6,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
	Info         string `protobuf:"bytes,7,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *MessageReaction) Reset() {
	*x = MessageReaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReaction) ProtoMessage() {}

func (x *MessageReaction) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReaction.ProtoReflect.Descriptor instead.
func (*MessageReaction) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{4}
}

func (x *MessageReaction) GetClientMsgId() string {
	if x != nil {
		return x.ClientMsgId
	}
	return ""
}

func (x *MessageReaction) GetReactionType() int32 {
	if x != nil {
		return x.ReactionType
	}
	return 0
}

func (x *MessageReaction) GetCounter() int32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *MessageReaction) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MessageReaction) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *MessageReaction) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *MessageReaction) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

// ================== 媒体基础结构 ==================
type ImageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  int32  `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height int32  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Type   string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Size   int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ImageInfo) Reset() {
	*x = ImageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageInfo) ProtoMessage() {}

func (x *ImageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageInfo.ProtoReflect.Descriptor instead.
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{5}
}

func (x *ImageInfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageInfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ImageInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ImageInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type PictureBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid   string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Type   string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Size   int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Width  int32  `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height int32  `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Url    string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *PictureBaseInfo) Reset() {
	*x = PictureBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PictureBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PictureBaseInfo) ProtoMessage() {}

func (x *PictureBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PictureBaseInfo.ProtoReflect.Descriptor instead.
func (*PictureBaseInfo) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{6}
}

func (x *PictureBaseInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *PictureBaseInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PictureBaseInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PictureBaseInfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *PictureBaseInfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *PictureBaseInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type SoundBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SoundPath string `protobuf:"bytes,2,opt,name=sound_path,json=soundPath,proto3" json:"sound_path,omitempty"`
	SourceUrl string `protobuf:"bytes,3,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	DataSize  int64  `protobuf:"varint,4,opt,name=data_size,json=dataSize,proto3" json:"data_size,omitempty"`
	Duration  int64  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	SoundType string `protobuf:"bytes,6,opt,name=sound_type,json=soundType,proto3" json:"sound_type,omitempty"`
}

func (x *SoundBaseInfo) Reset() {
	*x = SoundBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoundBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundBaseInfo) ProtoMessage() {}

func (x *SoundBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundBaseInfo.ProtoReflect.Descriptor instead.
func (*SoundBaseInfo) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{7}
}

func (x *SoundBaseInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SoundBaseInfo) GetSoundPath() string {
	if x != nil {
		return x.SoundPath
	}
	return ""
}

func (x *SoundBaseInfo) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *SoundBaseInfo) GetDataSize() int64 {
	if x != nil {
		return x.DataSize
	}
	return 0
}

func (x *SoundBaseInfo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SoundBaseInfo) GetSoundType() string {
	if x != nil {
		return x.SoundType
	}
	return ""
}

type VideoBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoPath      string `protobuf:"bytes,1,opt,name=video_path,json=videoPath,proto3" json:"video_path,omitempty"`
	VideoUuid      string `protobuf:"bytes,2,opt,name=video_uuid,json=videoUuid,proto3" json:"video_uuid,omitempty"`
	VideoUrl       string `protobuf:"bytes,3,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`
	VideoType      string `protobuf:"bytes,4,opt,name=video_type,json=videoType,proto3" json:"video_type,omitempty"`
	VideoSize      int64  `protobuf:"varint,5,opt,name=video_size,json=videoSize,proto3" json:"video_size,omitempty"`
	Duration       int64  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	SnapshotPath   string `protobuf:"bytes,7,opt,name=snapshot_path,json=snapshotPath,proto3" json:"snapshot_path,omitempty"`
	SnapshotUuid   string `protobuf:"bytes,8,opt,name=snapshot_uuid,json=snapshotUuid,proto3" json:"snapshot_uuid,omitempty"`
	SnapshotSize   int64  `protobuf:"varint,9,opt,name=snapshot_size,json=snapshotSize,proto3" json:"snapshot_size,omitempty"`
	SnapshotUrl    string `protobuf:"bytes,10,opt,name=snapshot_url,json=snapshotUrl,proto3" json:"snapshot_url,omitempty"`
	SnapshotWidth  int32  `protobuf:"varint,11,opt,name=snapshot_width,json=snapshotWidth,proto3" json:"snapshot_width,omitempty"`
	SnapshotHeight int32  `protobuf:"varint,12,opt,name=snapshot_height,json=snapshotHeight,proto3" json:"snapshot_height,omitempty"`
	SnapshotType   string `protobuf:"bytes,13,opt,name=snapshot_type,json=snapshotType,proto3" json:"snapshot_type,omitempty"`
}

func (x *VideoBaseInfo) Reset() {
	*x = VideoBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoBaseInfo) ProtoMessage() {}

func (x *VideoBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoBaseInfo.ProtoReflect.Descriptor instead.
func (*VideoBaseInfo) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{8}
}

func (x *VideoBaseInfo) GetVideoPath() string {
	if x != nil {
		return x.VideoPath
	}
	return ""
}

func (x *VideoBaseInfo) GetVideoUuid() string {
	if x != nil {
		return x.VideoUuid
	}
	return ""
}

func (x *VideoBaseInfo) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *VideoBaseInfo) GetVideoType() string {
	if x != nil {
		return x.VideoType
	}
	return ""
}

func (x *VideoBaseInfo) GetVideoSize() int64 {
	if x != nil {
		return x.VideoSize
	}
	return 0
}

func (x *VideoBaseInfo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *VideoBaseInfo) GetSnapshotPath() string {
	if x != nil {
		return x.SnapshotPath
	}
	return ""
}

func (x *VideoBaseInfo) GetSnapshotUuid() string {
	if x != nil {
		return x.SnapshotUuid
	}
	return ""
}

func (x *VideoBaseInfo) GetSnapshotSize() int64 {
	if x != nil {
		return x.SnapshotSize
	}
	return 0
}

func (x *VideoBaseInfo) GetSnapshotUrl() string {
	if x != nil {
		return x.SnapshotUrl
	}
	return ""
}

func (x *VideoBaseInfo) GetSnapshotWidth() int32 {
	if x != nil {
		return x.SnapshotWidth
	}
	return 0
}

func (x *VideoBaseInfo) GetSnapshotHeight() int32 {
	if x != nil {
		return x.SnapshotHeight
	}
	return 0
}

func (x *VideoBaseInfo) GetSnapshotType() string {
	if x != nil {
		return x.SnapshotType
	}
	return ""
}

type FileBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath  string `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Uuid      string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SourceUrl string `protobuf:"bytes,3,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	FileName  string `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileSize  int64  `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	FileType  string `protobuf:"bytes,6,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
}

func (x *FileBaseInfo) Reset() {
	*x = FileBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileBaseInfo) ProtoMessage() {}

func (x *FileBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileBaseInfo.ProtoReflect.Descriptor instead.
func (*FileBaseInfo) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{9}
}

func (x *FileBaseInfo) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FileBaseInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *FileBaseInfo) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *FileBaseInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileBaseInfo) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileBaseInfo) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

// ================== 各类 Elem ==================
type TextElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *TextElem) Reset() {
	*x = TextElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextElem) ProtoMessage() {}

func (x *TextElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextElem.ProtoReflect.Descriptor instead.
func (*TextElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{10}
}

func (x *TextElem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CardElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	FaceUrl  string `protobuf:"bytes,3,opt,name=face_url,json=faceUrl,proto3" json:"face_url,omitempty"`
	Ex       string `protobuf:"bytes,4,opt,name=ex,proto3" json:"ex,omitempty"`
}

func (x *CardElem) Reset() {
	*x = CardElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardElem) ProtoMessage() {}

func (x *CardElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardElem.ProtoReflect.Descriptor instead.
func (*CardElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{11}
}

func (x *CardElem) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CardElem) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *CardElem) GetFaceUrl() string {
	if x != nil {
		return x.FaceUrl
	}
	return ""
}

func (x *CardElem) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type PictureElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourcePath      string           `protobuf:"bytes,1,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	SourcePicture   *PictureBaseInfo `protobuf:"bytes,2,opt,name=source_picture,json=sourcePicture,proto3" json:"source_picture,omitempty"`
	BigPicture      *PictureBaseInfo `protobuf:"bytes,3,opt,name=big_picture,json=bigPicture,proto3" json:"big_picture,omitempty"`
	SnapshotPicture *PictureBaseInfo `protobuf:"bytes,4,opt,name=snapshot_picture,json=snapshotPicture,proto3" json:"snapshot_picture,omitempty"`
}

func (x *PictureElem) Reset() {
	*x = PictureElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PictureElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PictureElem) ProtoMessage() {}

func (x *PictureElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PictureElem.ProtoReflect.Descriptor instead.
func (*PictureElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{12}
}

func (x *PictureElem) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *PictureElem) GetSourcePicture() *PictureBaseInfo {
	if x != nil {
		return x.SourcePicture
	}
	return nil
}

func (x *PictureElem) GetBigPicture() *PictureBaseInfo {
	if x != nil {
		return x.BigPicture
	}
	return nil
}

func (x *PictureElem) GetSnapshotPicture() *PictureBaseInfo {
	if x != nil {
		return x.SnapshotPicture
	}
	return nil
}

type SoundElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SoundPath string `protobuf:"bytes,2,opt,name=sound_path,json=soundPath,proto3" json:"sound_path,omitempty"`
	SourceUrl string `protobuf:"bytes,3,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	DataSize  int64  `protobuf:"varint,4,opt,name=data_size,json=dataSize,proto3" json:"data_size,omitempty"`
	Duration  int64  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	SoundType string `protobuf:"bytes,6,opt,name=sound_type,json=soundType,proto3" json:"sound_type,omitempty"`
}

func (x *SoundElem) Reset() {
	*x = SoundElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoundElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundElem) ProtoMessage() {}

func (x *SoundElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundElem.ProtoReflect.Descriptor instead.
func (*SoundElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{13}
}

func (x *SoundElem) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SoundElem) GetSoundPath() string {
	if x != nil {
		return x.SoundPath
	}
	return ""
}

func (x *SoundElem) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *SoundElem) GetDataSize() int64 {
	if x != nil {
		return x.DataSize
	}
	return 0
}

func (x *SoundElem) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SoundElem) GetSoundType() string {
	if x != nil {
		return x.SoundType
	}
	return ""
}

type VideoElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoPath      string `protobuf:"bytes,1,opt,name=video_path,json=videoPath,proto3" json:"video_path,omitempty"`
	VideoUuid      string `protobuf:"bytes,2,opt,name=video_uuid,json=videoUuid,proto3" json:"video_uuid,omitempty"`
	VideoUrl       string `protobuf:"bytes,3,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`
	VideoType      string `protobuf:"bytes,4,opt,name=video_type,json=videoType,proto3" json:"video_type,omitempty"`
	VideoSize      int64  `protobuf:"varint,5,opt,name=video_size,json=videoSize,proto3" json:"video_size,omitempty"`
	Duration       int64  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	SnapshotPath   string `protobuf:"bytes,7,opt,name=snapshot_path,json=snapshotPath,proto3" json:"snapshot_path,omitempty"`
	SnapshotUuid   string `protobuf:"bytes,8,opt,name=snapshot_uuid,json=snapshotUuid,proto3" json:"snapshot_uuid,omitempty"`
	SnapshotSize   int64  `protobuf:"varint,9,opt,name=snapshot_size,json=snapshotSize,proto3" json:"snapshot_size,omitempty"`
	SnapshotUrl    string `protobuf:"bytes,10,opt,name=snapshot_url,json=snapshotUrl,proto3" json:"snapshot_url,omitempty"`
	SnapshotWidth  int32  `protobuf:"varint,11,opt,name=snapshot_width,json=snapshotWidth,proto3" json:"snapshot_width,omitempty"`
	SnapshotHeight int32  `protobuf:"varint,12,opt,name=snapshot_height,json=snapshotHeight,proto3" json:"snapshot_height,omitempty"`
	SnapshotType   string `protobuf:"bytes,13,opt,name=snapshot_type,json=snapshotType,proto3" json:"snapshot_type,omitempty"`
}

func (x *VideoElem) Reset() {
	*x = VideoElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoElem) ProtoMessage() {}

func (x *VideoElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoElem.ProtoReflect.Descriptor instead.
func (*VideoElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{14}
}

func (x *VideoElem) GetVideoPath() string {
	if x != nil {
		return x.VideoPath
	}
	return ""
}

func (x *VideoElem) GetVideoUuid() string {
	if x != nil {
		return x.VideoUuid
	}
	return ""
}

func (x *VideoElem) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *VideoElem) GetVideoType() string {
	if x != nil {
		return x.VideoType
	}
	return ""
}

func (x *VideoElem) GetVideoSize() int64 {
	if x != nil {
		return x.VideoSize
	}
	return 0
}

func (x *VideoElem) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *VideoElem) GetSnapshotPath() string {
	if x != nil {
		return x.SnapshotPath
	}
	return ""
}

func (x *VideoElem) GetSnapshotUuid() string {
	if x != nil {
		return x.SnapshotUuid
	}
	return ""
}

func (x *VideoElem) GetSnapshotSize() int64 {
	if x != nil {
		return x.SnapshotSize
	}
	return 0
}

func (x *VideoElem) GetSnapshotUrl() string {
	if x != nil {
		return x.SnapshotUrl
	}
	return ""
}

func (x *VideoElem) GetSnapshotWidth() int32 {
	if x != nil {
		return x.SnapshotWidth
	}
	return 0
}

func (x *VideoElem) GetSnapshotHeight() int32 {
	if x != nil {
		return x.SnapshotHeight
	}
	return 0
}

func (x *VideoElem) GetSnapshotType() string {
	if x != nil {
		return x.SnapshotType
	}
	return ""
}

type FileElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath  string `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Uuid      string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SourceUrl string `protobuf:"bytes,3,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	FileName  string `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileSize  int64  `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	FileType  string `protobuf:"bytes,6,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
}

func (x *FileElem) Reset() {
	*x = FileElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileElem) ProtoMessage() {}

func (x *FileElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileElem.ProtoReflect.Descriptor instead.
func (*FileElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{15}
}

func (x *FileElem) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FileElem) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *FileElem) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *FileElem) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileElem) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileElem) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

type MergeElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title             string           `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	AbstractList      []string         `protobuf:"bytes,2,rep,name=abstract_list,json=abstractList,proto3" json:"abstract_list,omitempty"`
	MultiMessage      []*MessageData   `protobuf:"bytes,3,rep,name=multi_message,json=multiMessage,proto3" json:"multi_message,omitempty"`
	MessageEntityList []*MessageEntity `protobuf:"bytes,4,rep,name=message_entity_list,json=messageEntityList,proto3" json:"message_entity_list,omitempty"`
}

func (x *MergeElem) Reset() {
	*x = MergeElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeElem) ProtoMessage() {}

func (x *MergeElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeElem.ProtoReflect.Descriptor instead.
func (*MergeElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{16}
}

func (x *MergeElem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MergeElem) GetAbstractList() []string {
	if x != nil {
		return x.AbstractList
	}
	return nil
}

func (x *MergeElem) GetMultiMessage() []*MessageData {
	if x != nil {
		return x.MultiMessage
	}
	return nil
}

func (x *MergeElem) GetMessageEntityList() []*MessageEntity {
	if x != nil {
		return x.MessageEntityList
	}
	return nil
}

type AtTextElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text         string       `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	AtUserList   []string     `protobuf:"bytes,2,rep,name=at_user_list,json=atUserList,proto3" json:"at_user_list,omitempty"`
	AtUsersInfo  []*AtInfo    `protobuf:"bytes,3,rep,name=at_users_info,json=atUsersInfo,proto3" json:"at_users_info,omitempty"`
	QuoteMessage *MessageData `protobuf:"bytes,4,opt,name=quote_message,json=quoteMessage,proto3" json:"quote_message,omitempty"`
	IsAtSelf     bool         `protobuf:"varint,5,opt,name=is_at_self,json=isAtSelf,proto3" json:"is_at_self,omitempty"`
}

func (x *AtTextElem) Reset() {
	*x = AtTextElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtTextElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtTextElem) ProtoMessage() {}

func (x *AtTextElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtTextElem.ProtoReflect.Descriptor instead.
func (*AtTextElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{17}
}

func (x *AtTextElem) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AtTextElem) GetAtUserList() []string {
	if x != nil {
		return x.AtUserList
	}
	return nil
}

func (x *AtTextElem) GetAtUsersInfo() []*AtInfo {
	if x != nil {
		return x.AtUsersInfo
	}
	return nil
}

func (x *AtTextElem) GetQuoteMessage() *MessageData {
	if x != nil {
		return x.QuoteMessage
	}
	return nil
}

func (x *AtTextElem) GetIsAtSelf() bool {
	if x != nil {
		return x.IsAtSelf
	}
	return false
}

type FaceElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Data  string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *FaceElem) Reset() {
	*x = FaceElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaceElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaceElem) ProtoMessage() {}

func (x *FaceElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaceElem.ProtoReflect.Descriptor instead.
func (*FaceElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{18}
}

func (x *FaceElem) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *FaceElem) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type LocationElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string  `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Longitude   float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude    float64 `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
}

func (x *LocationElem) Reset() {
	*x = LocationElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationElem) ProtoMessage() {}

func (x *LocationElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationElem.ProtoReflect.Descriptor instead.
func (*LocationElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{19}
}

func (x *LocationElem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LocationElem) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *LocationElem) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type CustomElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        string `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Extension   string `protobuf:"bytes,3,opt,name=extension,proto3" json:"extension,omitempty"`
}

func (x *CustomElem) Reset() {
	*x = CustomElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomElem) ProtoMessage() {}

func (x *CustomElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomElem.ProtoReflect.Descriptor instead.
func (*CustomElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{20}
}

func (x *CustomElem) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *CustomElem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CustomElem) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

type QuoteElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text              string           `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	QuoteMessage      *MessageData     `protobuf:"bytes,2,opt,name=quote_message,json=quoteMessage,proto3" json:"quote_message,omitempty"`
	MessageEntityList []*MessageEntity `protobuf:"bytes,3,rep,name=message_entity_list,json=messageEntityList,proto3" json:"message_entity_list,omitempty"`
}

func (x *QuoteElem) Reset() {
	*x = QuoteElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteElem) ProtoMessage() {}

func (x *QuoteElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteElem.ProtoReflect.Descriptor instead.
func (*QuoteElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{21}
}

func (x *QuoteElem) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *QuoteElem) GetQuoteMessage() *MessageData {
	if x != nil {
		return x.QuoteMessage
	}
	return nil
}

func (x *QuoteElem) GetMessageEntityList() []*MessageEntity {
	if x != nil {
		return x.MessageEntityList
	}
	return nil
}

type NotificationElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail string `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *NotificationElem) Reset() {
	*x = NotificationElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationElem) ProtoMessage() {}

func (x *NotificationElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationElem.ProtoReflect.Descriptor instead.
func (*NotificationElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{22}
}

func (x *NotificationElem) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type AdvancedTextElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text              string           `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	MessageEntityList []*MessageEntity `protobuf:"bytes,2,rep,name=message_entity_list,json=messageEntityList,proto3" json:"message_entity_list,omitempty"`
}

func (x *AdvancedTextElem) Reset() {
	*x = AdvancedTextElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvancedTextElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvancedTextElem) ProtoMessage() {}

func (x *AdvancedTextElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvancedTextElem.ProtoReflect.Descriptor instead.
func (*AdvancedTextElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{23}
}

func (x *AdvancedTextElem) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AdvancedTextElem) GetMessageEntityList() []*MessageEntity {
	if x != nil {
		return x.MessageEntityList
	}
	return nil
}

type TypingElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgTips string `protobuf:"bytes,1,opt,name=msg_tips,json=msgTips,proto3" json:"msg_tips,omitempty"`
}

func (x *TypingElem) Reset() {
	*x = TypingElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypingElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingElem) ProtoMessage() {}

func (x *TypingElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingElem.ProtoReflect.Descriptor instead.
func (*TypingElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{24}
}

func (x *TypingElem) GetMsgTips() string {
	if x != nil {
		return x.MsgTips
	}
	return ""
}

type MarkdownTextElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *MarkdownTextElem) Reset() {
	*x = MarkdownTextElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkdownTextElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkdownTextElem) ProtoMessage() {}

func (x *MarkdownTextElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkdownTextElem.ProtoReflect.Descriptor instead.
func (*MarkdownTextElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{25}
}

func (x *MarkdownTextElem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// ================== 附加信息/进度/实体 ==================
type AttachedInfoElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupHasReadInfo  *GroupHasReadInfo `protobuf:"bytes,1,opt,name=group_has_read_info,json=groupHasReadInfo,proto3" json:"group_has_read_info,omitempty"`
	IsPrivateChat     bool              `protobuf:"varint,2,opt,name=is_private_chat,json=isPrivateChat,proto3" json:"is_private_chat,omitempty"`
	BurnDuration      int32             `protobuf:"varint,3,opt,name=burn_duration,json=burnDuration,proto3" json:"burn_duration,omitempty"`
	HasReadTime       int64             `protobuf:"varint,4,opt,name=has_read_time,json=hasReadTime,proto3" json:"has_read_time,omitempty"`
	MessageEntityList []*MessageEntity  `protobuf:"bytes,5,rep,name=message_entity_list,json=messageEntityList,proto3" json:"message_entity_list,omitempty"`
	IsEncryption      bool              `protobuf:"varint,6,opt,name=is_encryption,json=isEncryption,proto3" json:"is_encryption,omitempty"`
	InEncryptStatus   bool              `protobuf:"varint,7,opt,name=in_encrypt_status,json=inEncryptStatus,proto3" json:"in_encrypt_status,omitempty"`
	Progress          *UploadProgress   `protobuf:"bytes,8,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *AttachedInfoElem) Reset() {
	*x = AttachedInfoElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachedInfoElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachedInfoElem) ProtoMessage() {}

func (x *AttachedInfoElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachedInfoElem.ProtoReflect.Descriptor instead.
func (*AttachedInfoElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{26}
}

func (x *AttachedInfoElem) GetGroupHasReadInfo() *GroupHasReadInfo {
	if x != nil {
		return x.GroupHasReadInfo
	}
	return nil
}

func (x *AttachedInfoElem) GetIsPrivateChat() bool {
	if x != nil {
		return x.IsPrivateChat
	}
	return false
}

func (x *AttachedInfoElem) GetBurnDuration() int32 {
	if x != nil {
		return x.BurnDuration
	}
	return 0
}

func (x *AttachedInfoElem) GetHasReadTime() int64 {
	if x != nil {
		return x.HasReadTime
	}
	return 0
}

func (x *AttachedInfoElem) GetMessageEntityList() []*MessageEntity {
	if x != nil {
		return x.MessageEntityList
	}
	return nil
}

func (x *AttachedInfoElem) GetIsEncryption() bool {
	if x != nil {
		return x.IsEncryption
	}
	return false
}

func (x *AttachedInfoElem) GetInEncryptStatus() bool {
	if x != nil {
		return x.InEncryptStatus
	}
	return false
}

func (x *AttachedInfoElem) GetProgress() *UploadProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

type SystemEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType string            `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"` // "kick" / "transfer" / "mute" ...
	Reason    string            `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Data      map[string]string `protobuf:"bytes,3,rep,name=model,proto3" json:"model,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 附带数据
}

func (x *SystemEvent) Reset() {
	*x = SystemEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemEvent) ProtoMessage() {}

func (x *SystemEvent) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemEvent.ProtoReflect.Descriptor instead.
func (*SystemEvent) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{27}
}

func (x *SystemEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *SystemEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SystemEvent) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int64  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Save     int64  `protobuf:"varint,2,opt,name=save,proto3" json:"save,omitempty"`
	Current  int64  `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`
	UploadId string `protobuf:"bytes,4,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
}

func (x *UploadProgress) Reset() {
	*x = UploadProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadProgress) ProtoMessage() {}

func (x *UploadProgress) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadProgress.ProtoReflect.Descriptor instead.
func (*UploadProgress) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{28}
}

func (x *UploadProgress) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UploadProgress) GetSave() int64 {
	if x != nil {
		return x.Save
	}
	return 0
}

func (x *UploadProgress) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *UploadProgress) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

type ReactionElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Counter          int32               `protobuf:"varint,1,opt,name=counter,proto3" json:"counter,omitempty"`
	Type             int32               `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	UserReactionList []*UserReactionElem `protobuf:"bytes,3,rep,name=user_reaction_list,json=userReactionList,proto3" json:"user_reaction_list,omitempty"`
	CanRepeat        bool                `protobuf:"varint,4,opt,name=can_repeat,json=canRepeat,proto3" json:"can_repeat,omitempty"`
	Info             string              `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *ReactionElem) Reset() {
	*x = ReactionElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactionElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactionElem) ProtoMessage() {}

func (x *ReactionElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactionElem.ProtoReflect.Descriptor instead.
func (*ReactionElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{29}
}

func (x *ReactionElem) GetCounter() int32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *ReactionElem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReactionElem) GetUserReactionList() []*UserReactionElem {
	if x != nil {
		return x.UserReactionList
	}
	return nil
}

func (x *ReactionElem) GetCanRepeat() bool {
	if x != nil {
		return x.CanRepeat
	}
	return false
}

func (x *ReactionElem) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type UserReactionElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Counter int32  `protobuf:"varint,2,opt,name=counter,proto3" json:"counter,omitempty"`
	Info    string `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *UserReactionElem) Reset() {
	*x = UserReactionElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserReactionElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReactionElem) ProtoMessage() {}

func (x *UserReactionElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReactionElem.ProtoReflect.Descriptor instead.
func (*UserReactionElem) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{30}
}

func (x *UserReactionElem) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserReactionElem) GetCounter() int32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *UserReactionElem) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type MessageEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Length int32  `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	Url    string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Ex     string `protobuf:"bytes,5,opt,name=ex,proto3" json:"ex,omitempty"`
}

func (x *MessageEntity) Reset() {
	*x = MessageEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEntity) ProtoMessage() {}

func (x *MessageEntity) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEntity.ProtoReflect.Descriptor instead.
func (*MessageEntity) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{31}
}

func (x *MessageEntity) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MessageEntity) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MessageEntity) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *MessageEntity) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MessageEntity) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type GroupHasReadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasReadUserIdList []string `protobuf:"bytes,1,rep,name=has_read_user_id_list,json=hasReadUserIdList,proto3" json:"has_read_user_id_list,omitempty"`
	HasReadCount      int32    `protobuf:"varint,2,opt,name=has_read_count,json=hasReadCount,proto3" json:"has_read_count,omitempty"`
	GroupMemberCount  int32    `protobuf:"varint,3,opt,name=group_member_count,json=groupMemberCount,proto3" json:"group_member_count,omitempty"`
}

func (x *GroupHasReadInfo) Reset() {
	*x = GroupHasReadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupHasReadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupHasReadInfo) ProtoMessage() {}

func (x *GroupHasReadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupHasReadInfo.ProtoReflect.Descriptor instead.
func (*GroupHasReadInfo) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{32}
}

func (x *GroupHasReadInfo) GetHasReadUserIdList() []string {
	if x != nil {
		return x.HasReadUserIdList
	}
	return nil
}

func (x *GroupHasReadInfo) GetHasReadCount() int32 {
	if x != nil {
		return x.HasReadCount
	}
	return 0
}

func (x *GroupHasReadInfo) GetGroupMemberCount() int32 {
	if x != nil {
		return x.GroupMemberCount
	}
	return 0
}

type AtInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AtUserId      string `protobuf:"bytes,1,opt,name=at_user_id,json=atUserId,proto3" json:"at_user_id,omitempty"`
	GroupNickname string `protobuf:"bytes,2,opt,name=group_nickname,json=groupNickname,proto3" json:"group_nickname,omitempty"`
}

func (x *AtInfo) Reset() {
	*x = AtInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtInfo) ProtoMessage() {}

func (x *AtInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtInfo.ProtoReflect.Descriptor instead.
func (*AtInfo) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{33}
}

func (x *AtInfo) GetAtUserId() string {
	if x != nil {
		return x.AtUserId
	}
	return ""
}

func (x *AtInfo) GetGroupNickname() string {
	if x != nil {
		return x.GroupNickname
	}
	return ""
}

var File_message_message_proto protoreflect.FileDescriptor

var file_message_message_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x1a, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x72, 0x69, 0x63,
	0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x11, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x63,
	0x76, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x63, 0x76,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x61, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x6f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x6f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x65, 0x78, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x12, 0x31, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x65, 0x6c, 0x65, 0x6d, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d,
	0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x31, 0x0a, 0x09, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x45,
	0x6c, 0x65, 0x6d, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x3a, 0x0a,
	0x0c, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x52, 0x0b, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64,
	0x45, 0x6c, 0x65, 0x6d, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x12,
	0x34, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x31, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6c,
	0x65, 0x6d, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x34, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x67,
	0x65, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x45,
	0x6c, 0x65, 0x6d, 0x52, 0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x38,
	0x0a, 0x0c, 0x61, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x18, 0x25,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x74, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x52, 0x0a, 0x61, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x31, 0x0a, 0x09, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x45, 0x6c, 0x65,
	0x6d, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x0d, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x18, 0x27, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x52, 0x0c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x37, 0x0a, 0x0b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45,
	0x6c, 0x65, 0x6d, 0x12, 0x34, 0x0a, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x65, 0x6c, 0x65,
	0x6d, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x52, 0x09,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x49, 0x0a, 0x11, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c,
	0x65, 0x6d, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6c, 0x65, 0x6d, 0x12, 0x4a, 0x0a, 0x12, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x52, 0x10,
	0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d,
	0x12, 0x37, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x18,
	0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x52, 0x0a, 0x74,
	0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x4a, 0x0a, 0x12, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x18,
	0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x45,
	0x6c, 0x65, 0x6d, 0x52, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x4a, 0x0a, 0x12, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77,
	0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x18, 0x2e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x52,
	0x10, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x3d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x64, 0x69, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x3e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x65, 0x64, 0x69, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x3f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x40, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x41, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x42, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x43, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x18,
	0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x68,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61,
	0x6c, 0x12, 0x2b, 0x0a, 0x04, 0x72, 0x69, 0x63, 0x68, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63,
	0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x72, 0x69, 0x63, 0x68, 0x12, 0x33,
	0x0a, 0x07, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x6f, 0x64, 0x18, 0x6e, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x6f, 0x4d, 0x6f, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x07, 0x61, 0x75, 0x74, 0x6f,
	0x6d, 0x6f, 0x64, 0x22, 0xfe, 0x01, 0x0a, 0x0f, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65,
	0x78, 0x12, 0x31, 0x0a, 0x15, 0x69, 0x6f, 0x73, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x69, 0x6f, 0x73, 0x42, 0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x6c, 0x75, 0x73, 0x31, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6f, 0x73, 0x5f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6f, 0x73, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6f, 0x73, 0x5f, 0x73,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6f, 0x73, 0x53,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x3e, 0x0a, 0x1b, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f,
	0x76, 0x69, 0x76, 0x6f, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x56, 0x69, 0x76, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe2, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x6d,
	0x73, 0x67, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe2, 0x03, 0x0a, 0x0e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37,
	0x0a, 0x18, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x15, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x1e,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x22, 0xdf,
	0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x61, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0f, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42,
	0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0xb9, 0x01, 0x0a, 0x0d, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x61, 0x73,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x6f, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xcb, 0x03, 0x0a, 0x0d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb5, 0x01,
	0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x24, 0x0a, 0x08, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x6a, 0x0a, 0x08, 0x43,
	0x61, 0x72, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x61, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x22, 0xf8, 0x01, 0x0a, 0x0b, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x42, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3c, 0x0a, 0x0b,
	0x62, 0x69, 0x67, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x62, 0x69, 0x67, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x09, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6c, 0x65, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc7, 0x03, 0x0a, 0x09, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x6c, 0x65,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x09, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x49, 0x0a, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xd6, 0x01, 0x0a, 0x0a, 0x41,
	0x74, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a,
	0x0c, 0x61, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x36, 0x0a, 0x0d, 0x61, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x61, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0d, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x61, 0x74, 0x5f, 0x73,
	0x65, 0x6c, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x74, 0x53,
	0x65, 0x6c, 0x66, 0x22, 0x34, 0x0a, 0x08, 0x46, 0x61, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6a, 0x0a, 0x0c, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x60, 0x0a, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45,
	0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa8, 0x01, 0x0a, 0x09, 0x51, 0x75, 0x6f, 0x74,
	0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x2a, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x71,
	0x0a, 0x10, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x49, 0x0a, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x11,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x27, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x69, 0x70, 0x73, 0x22, 0x2c, 0x0a, 0x10, 0x4d, 0x61,
	0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa4, 0x03, 0x0a, 0x10, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x4b, 0x0a,
	0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x61, 0x73,
	0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x48,
	0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73,
	0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x72, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x75, 0x72, 0x6e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x5f, 0x72,
	0x65, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x68, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69,
	0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x69,
	0x6e, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xb4, 0x01, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a,
	0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x71, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x61, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x61,
	0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x0c, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c,
	0x65, 0x6d, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x59, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0x75, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x22, 0x98, 0x01, 0x0a, 0x10, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x48, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30,
	0x0a, 0x15, 0x68, 0x61, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x68,
	0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x06, 0x41, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c,
	0x0a, 0x0a, 0x61, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x20, 0x5a, 0x1e, 0x50, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3b, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_message_proto_rawDescOnce sync.Once
	file_message_message_proto_rawDescData = file_message_message_proto_rawDesc
)

func file_message_message_proto_rawDescGZIP() []byte {
	file_message_message_proto_rawDescOnce.Do(func() {
		file_message_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_message_proto_rawDescData)
	})
	return file_message_message_proto_rawDescData
}

var file_message_message_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_message_message_proto_goTypes = []any{
	(*MessageData)(nil),      // 0: message.v1.MessageData
	(*OfflinePushInfo)(nil),  // 1: message.v1.OfflinePushInfo
	(*MessageReceipt)(nil),   // 2: message.v1.MessageReceipt
	(*MessageRevoked)(nil),   // 3: message.v1.MessageRevoked
	(*MessageReaction)(nil),  // 4: message.v1.MessageReaction
	(*ImageInfo)(nil),        // 5: message.v1.ImageInfo
	(*PictureBaseInfo)(nil),  // 6: message.v1.PictureBaseInfo
	(*SoundBaseInfo)(nil),    // 7: message.v1.SoundBaseInfo
	(*VideoBaseInfo)(nil),    // 8: message.v1.VideoBaseInfo
	(*FileBaseInfo)(nil),     // 9: message.v1.FileBaseInfo
	(*TextElem)(nil),         // 10: message.v1.TextElem
	(*CardElem)(nil),         // 11: message.v1.CardElem
	(*PictureElem)(nil),      // 12: message.v1.PictureElem
	(*SoundElem)(nil),        // 13: message.v1.SoundElem
	(*VideoElem)(nil),        // 14: message.v1.VideoElem
	(*FileElem)(nil),         // 15: message.v1.FileElem
	(*MergeElem)(nil),        // 16: message.v1.MergeElem
	(*AtTextElem)(nil),       // 17: message.v1.AtTextElem
	(*FaceElem)(nil),         // 18: message.v1.FaceElem
	(*LocationElem)(nil),     // 19: message.v1.LocationElem
	(*CustomElem)(nil),       // 20: message.v1.CustomElem
	(*QuoteElem)(nil),        // 21: message.v1.QuoteElem
	(*NotificationElem)(nil), // 22: message.v1.NotificationElem
	(*AdvancedTextElem)(nil), // 23: message.v1.AdvancedTextElem
	(*TypingElem)(nil),       // 24: message.v1.TypingElem
	(*MarkdownTextElem)(nil), // 25: message.v1.MarkdownTextElem
	(*AttachedInfoElem)(nil), // 26: message.v1.AttachedInfoElem
	(*SystemEvent)(nil),      // 27: message.v1.SystemEvent
	(*UploadProgress)(nil),   // 28: message.v1.UploadProgress
	(*ReactionElem)(nil),     // 29: message.v1.ReactionElem
	(*UserReactionElem)(nil), // 30: message.v1.UserReactionElem
	(*MessageEntity)(nil),    // 31: message.v1.MessageEntity
	(*GroupHasReadInfo)(nil), // 32: message.v1.GroupHasReadInfo
	(*AtInfo)(nil),           // 33: message.v1.AtInfo
	nil,                      // 34: message.v1.SystemEvent.DataEntry
	(*RichMessage)(nil),      // 35: message.v1.RichMessage
	(*AutoModSignal)(nil),    // 36: message.v1.AutoModSignal
}
var file_message_message_proto_depIdxs = []int32{
	1,  // 0: message.v1.MessageData.offline_push:type_name -> message.v1.OfflinePushInfo
	10, // 1: message.v1.MessageData.text_elem:type_name -> message.v1.TextElem
	11, // 2: message.v1.MessageData.card_elem:type_name -> message.v1.CardElem
	12, // 3: message.v1.MessageData.picture_elem:type_name -> message.v1.PictureElem
	13, // 4: message.v1.MessageData.sound_elem:type_name -> message.v1.SoundElem
	14, // 5: message.v1.MessageData.video_elem:type_name -> message.v1.VideoElem
	15, // 6: message.v1.MessageData.file_elem:type_name -> message.v1.FileElem
	16, // 7: message.v1.MessageData.merge_elem:type_name -> message.v1.MergeElem
	17, // 8: message.v1.MessageData.at_text_elem:type_name -> message.v1.AtTextElem
	18, // 9: message.v1.MessageData.face_elem:type_name -> message.v1.FaceElem
	19, // 10: message.v1.MessageData.location_elem:type_name -> message.v1.LocationElem
	20, // 11: message.v1.MessageData.custom_elem:type_name -> message.v1.CustomElem
	21, // 12: message.v1.MessageData.quote_elem:type_name -> message.v1.QuoteElem
	22, // 13: message.v1.MessageData.notification_elem:type_name -> message.v1.NotificationElem
	23, // 14: message.v1.MessageData.advanced_text_elem:type_name -> message.v1.AdvancedTextElem
	24, // 15: message.v1.MessageData.typing_elem:type_name -> message.v1.TypingElem
	26, // 16: message.v1.MessageData.attached_info_elem:type_name -> message.v1.AttachedInfoElem
	25, // 17: message.v1.MessageData.markdown_text_elem:type_name -> message.v1.MarkdownTextElem
	35, // 18: message.v1.MessageData.rich:type_name -> message.v1.RichMessage
	36, // 19: message.v1.MessageData.automod:type_name -> message.v1.AutoModSignal
	6,  // 20: message.v1.PictureElem.source_picture:type_name -> message.v1.PictureBaseInfo
	6,  // 21: message.v1.PictureElem.big_picture:type_name -> message.v1.PictureBaseInfo
	6,  // 22: message.v1.PictureElem.snapshot_picture:type_name -> message.v1.PictureBaseInfo
	0,  // 23: message.v1.MergeElem.multi_message:type_name -> message.v1.MessageData
	31, // 24: message.v1.MergeElem.message_entity_list:type_name -> message.v1.MessageEntity
	33, // 25: message.v1.AtTextElem.at_users_info:type_name -> message.v1.AtInfo
	0,  // 26: message.v1.AtTextElem.quote_message:type_name -> message.v1.MessageData
	0,  // 27: message.v1.QuoteElem.quote_message:type_name -> message.v1.MessageData
	31, // 28: message.v1.QuoteElem.message_entity_list:type_name -> message.v1.MessageEntity
	31, // 29: message.v1.AdvancedTextElem.message_entity_list:type_name -> message.v1.MessageEntity
	32, // 30: message.v1.AttachedInfoElem.group_has_read_info:type_name -> message.v1.GroupHasReadInfo
	31, // 31: message.v1.AttachedInfoElem.message_entity_list:type_name -> message.v1.MessageEntity
	28, // 32: message.v1.AttachedInfoElem.progress:type_name -> message.v1.UploadProgress
	34, // 33: message.v1.SystemEvent.model:type_name -> message.v1.SystemEvent.DataEntry
	30, // 34: message.v1.ReactionElem.user_reaction_list:type_name -> message.v1.UserReactionElem
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_message_message_proto_init() }
func file_message_message_proto_init() {
	if File_message_message_proto != nil {
		return
	}
	file_message_rich_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_message_message_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MessageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*OfflinePushInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MessageReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*MessageRevoked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*MessageReaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ImageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PictureBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SoundBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*VideoBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*FileBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*TextElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CardElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PictureElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*SoundElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*VideoElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*FileElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*MergeElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*AtTextElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*FaceElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*LocationElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CustomElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*QuoteElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*NotificationElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*AdvancedTextElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*TypingElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*MarkdownTextElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*AttachedInfoElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*SystemEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*UploadProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*ReactionElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*UserReactionElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*MessageEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*GroupHasReadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*AtInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_message_proto_goTypes,
		DependencyIndexes: file_message_message_proto_depIdxs,
		MessageInfos:      file_message_message_proto_msgTypes,
	}.Build()
	File_message_message_proto = out.File
	file_message_message_proto_rawDesc = nil
	file_message_message_proto_goTypes = nil
	file_message_message_proto_depIdxs = nil
}
